/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * OpenWeatherMap API
 * Get current weather, daily forecast for 16 days, and 3-hourly forecast 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results.
 * OpenAPI spec version: 2.5
 */
import type { AxiosRequestConfig, AxiosResponse } from 'axios';
import * as axios from 'axios';
export type CurrentWeatherDataMode = (typeof CurrentWeatherDataMode)[keyof typeof CurrentWeatherDataMode];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CurrentWeatherDataMode = {
  json: 'json',
  xml: 'xml',
  html: 'html',
} as const;

export type CurrentWeatherDataLang = (typeof CurrentWeatherDataLang)[keyof typeof CurrentWeatherDataLang];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CurrentWeatherDataLang = {
  ar: 'ar',
  bg: 'bg',
  ca: 'ca',
  cz: 'cz',
  de: 'de',
  el: 'el',
  en: 'en',
  fa: 'fa',
  fi: 'fi',
  fr: 'fr',
  gl: 'gl',
  hr: 'hr',
  hu: 'hu',
  it: 'it',
  ja: 'ja',
  kr: 'kr',
  la: 'la',
  lt: 'lt',
  mk: 'mk',
  nl: 'nl',
  pl: 'pl',
  pt: 'pt',
  ro: 'ro',
  ru: 'ru',
  se: 'se',
  sk: 'sk',
  sl: 'sl',
  es: 'es',
  tr: 'tr',
  ua: 'ua',
  vi: 'vi',
  zh_cn: 'zh_cn',
  zh_tw: 'zh_tw',
} as const;

export type CurrentWeatherDataUnits = (typeof CurrentWeatherDataUnits)[keyof typeof CurrentWeatherDataUnits];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CurrentWeatherDataUnits = {
  standard: 'standard',
  metric: 'metric',
  imperial: 'imperial',
} as const;

export type CurrentWeatherDataParams = {
  /**
   * **City name**. *Example: London*. You can call by city name, or by city name and country code. The API responds with a list of results that match a searching word. For the query value, type the city name and optionally the country code divided by comma; use ISO 3166 country codes.
   */
  q?: string;
  /**
   * Access Token
   */
  appid?: string;
  /**
   * **City ID**. *Example: `2172797`*. You can call by city ID. API responds with exact result. The List of city IDs can be downloaded [here](http://bulk.openweathermap.org/sample/). You can include multiple cities in parameter &mdash; just separate them by commas. The limit of locations is 20. *Note: A single ID counts as a one API call. So, if you have city IDs. it's treated as 3 API calls.*
   */
  id?: string;
  /**
   * **Latitude**. *Example: 35*. The latitude cordinate of the location of your interest. Must use with `lon`.
   */
  lat?: string;
  /**
   * **Longitude**. *Example: 139*. Longitude cordinate of the location of your interest. Must use with `lat`.
   */
  lon?: string;
  /**
   * **Zip code**. Search by zip code. *Example: 95050,us*. Please note if country is not specified then the search works for USA as a default.
   */
  zip?: string;
  /**
   * **Units**. *Example: imperial*. Possible values: `metric`, `imperial`. When you do not use units parameter, format is `standard` by default.
   */
  units?: CurrentWeatherDataUnits;
  /**
   * **Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.
   */
  lang?: CurrentWeatherDataLang;
  /**
   * **Mode**. *Example: html*. Determines format of response. Possible values are `xml` and `html`. If mode parameter is empty the format is `json` by default.
   */
  Mode?: CurrentWeatherDataMode;
};

export interface Sys {
  /** Country code (GB, JP etc.) */
  country?: string;
  /** Internal parameter */
  id?: number;
  /** Internal parameter */
  message?: number;
  /** Sunrise time, unix, UTC */
  sunrise?: number;
  /** Sunset time, unix, UTC */
  sunset?: number;
  /** Internal parameter */
  type?: number;
}

export interface Snow {
  /** Snow volume for the last 3 hours */
  '3h'?: number;
}

export interface Rain {
  /** Rain volume for the last 3 hours */
  '3h'?: number;
}

export interface Clouds {
  /** Cloudiness, % */
  all?: number;
}

export interface Wind {
  /** Wind direction, degrees (meteorological) */
  deg?: number;
  /** Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour. */
  speed?: number;
}

export interface Main {
  /** Temperature Feels like. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit. */
  feels_like?: number;
  /** Atmospheric pressure on the ground level, hPa */
  grnd_level?: number;
  /** Humidity, % */
  humidity?: number;
  /** Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa */
  pressure?: number;
  /** Atmospheric pressure on the sea level, hPa */
  sea_level?: number;
  /** Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit. */
  temp?: number;
  /** Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit. */
  temp_max?: number;
  /** Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit. */
  temp_min?: number;
}

export interface Weather {
  /** Weather condition within the group */
  description?: string;
  /** Weather icon id */
  icon?: string;
  /** Weather condition id */
  id?: number;
  /** Group of weather parameters (Rain, Snow, Extreme etc.) */
  main?: string;
}

export interface Coord {
  /** City geo location, latitude */
  lat?: number;
  /** City geo location, longitude */
  lon?: number;
}

export interface N200 {
  /** Internal parameter */
  base?: string;
  clouds?: Clouds;
  /** Internal parameter */
  cod?: number;
  coord?: Coord;
  /** Time of data calculation, unix, UTC */
  dt?: number;
  /** City ID */
  id?: number;
  main?: Main;
  name?: string;
  rain?: Rain;
  snow?: Snow;
  sys?: Sys;
  /** Visibility, meter */
  visibility?: number;
  /** (more info Weather condition codes) */
  weather?: Weather[];
  wind?: Wind;
}

/**
 * Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations.
 * @summary Call current weather data for one location
 */
export const currentWeatherData = <TData = AxiosResponse<N200>>(
  params?: CurrentWeatherDataParams,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.default.get(`https://api.openweathermap.org/data/2.5/weather`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

export type CurrentWeatherDataResult = AxiosResponse<200>;
